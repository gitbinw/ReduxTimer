// import React, { Component } from "react";
// import ReactDOM from "react-dom";
// import _ from "lodash";

// import { createStore, applyMiddleware, combineReducers, compose } from "redux";
// import { Provider, connect } from "react-redux";
// // import { Form, Control, Errors, combineForms, actions } from 'react-redux-form'
// import thunk from "redux-thunk";
// import createLogger from "redux-logger";
// import RxForm from 'rxform';

// console.log(RxForm);

// const logger = createLogger();

// import {
//   Field,
//   Fieldset,
//   Errors,
//   Control,
//   Form,
//   LocalForm,
//   combineForms,
//   actions,
//   formReducer,
//   modeled,
//   controls
// } from "react-redux-form";


// const initialUserState = {
//   firstName: '',
//   lastName: '',
//   pass1: '',
//   pass2: '',
//   email: ''
// };

// const store = createStore(combineForms({
//   user: initialUserState,
// }), applyMiddleware(thunk, createLogger()));

// const form = new RxForm(initialUserState);

// window.f = form;

// class Ctl extends Component {
//   constructor(props) {
//     super(props);

//     this.state = form.$form.get(props.model).state;
//   }
//   componentDidMount() {
//     const { model } = this.props;
//     this.field = form.$form.get(model);
//     this.form = form;

//     this.field.state$.subscribe(state => {
//       this.setState(state)
//     });
//   }
//   render() {
//     return (
//       <div>
//         {this.state.touched ? 'touched': 'not touched'}<br/>
//         {this.state.focus ? 'focus': 'not focus'}<br/>
//         <input type="text" onChange={e => this.field.change(e.target.value)} onBlur={e => this.field.focus = false}  onFocus={e => this.field.focus = true}/>
//       </div>
//     )
//   }
// }

// function reset() {
//   console.log('About to reset the form');
//   store.dispatch(actions.reset('user'));
// }

// class UserForm extends Component {
//   render() {
//     return (
//       <Form model="user" onSubmit={e => console.log(e)} hideNativeErrors>
//         <div className="field">
//           <label>First name:</label>
//           <Control.text model="user.firstName" onChange={(val) => console.log('changed', val)} />
//         </div>

//         <div className="field">
//           <label>Last name:</label>
//           <Control.text model="user.lastName" debounce={3000}/>
//         </div>
//         <Errors model="user.lastName" show={true} />

//         <Control.text model="user.test[3].something" />

//         <Control.text
//           model=".email"
//           type="email"
//           required
//         />
//         <Errors
//           model=".email"
//           messages={{ valueMissing: 'where is the email fool', typeMismatch: 'that is not a valid email' }}
//           show="touched"
//         />

//         <button type="submit">
//           Submit (check console)
//         </button>
//         <button type="reset">
//           reset
//         </button>
//       </Form>
//     )
//   }
// }

// class App extends React.Component {
//   render() {
//     return (
//       <Provider store={store}>
//         <UserForm />
//       </Provider>
//     );
//   }
// }

// // ReactDOM.render(<Ctl model="firstName" />, document.getElementById('app'));
// ReactDOM.render(<App />, document.getElementById('app'));
